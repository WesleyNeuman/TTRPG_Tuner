@using BattleEntities.Actions
@using BattleProperties
@using BattleEntities
@using TTRPG_Tuner.Pages.BuildEncounter.DisplayLists

@page "/build"


<PageTitle>Build a New Encounter</PageTitle>
<div class="encounter">
    <div class="side-column">
        <h1>Placeholder</h1>

        <div class="battle-properties">
            <ActionList Actions=this.Actions/>

            <div class="damage-types">
                <span class="property-header">Damage Types</span>
                <button class="button btn-add-property" @onclick="AddNewDamageType">
                    <i class="bi bi-plus"></i>
                </button>
                <ul>
                    @foreach (var item in this.DamageTypes)
                    {
                        <li>@item.Name</li>
                    }
                </ul>
            </div>

            <div class="status-types">
                <span class="property-header">Status Types</span>
                <button class="button btn-add-property" @onclick="AddNewStatusType">
                    <i class="bi bi-plus"></i>
                </button>
                <ul>
                    @foreach (var item in this.StatusTypes)
                    {
                        <li>@item.Name</li>
                    }
                </ul>
            </div>
        </div>
    </div>

    <div class="main-column">
        <h1>Build a New Encounter</h1>

        <div class="entities">
            <div class="characters">
                <h5 class="entity-title">Player Characters</h5>
                @foreach (var character in this.Characters)
                {
                    <EntityCard entity=character/>
                }
                <button class="button">
                    <i class="bi bi-plus-circle"></i>
                </button>
            </div>
            <div class="enemies">
                <h5 class="entity-title">Enemies</h5>
                @foreach (var enemy in this.Enemies)
                {
                    <EntityCard entity=enemy/>
                }
                <button class="button">
                    <i class="bi bi-plus-circle"></i>
                </button>
            </div>
        </div>
        
        <div class="map">
            <MapCard />
        </div>
    </div>
</div>



@code {
    void DoNothing() 
    {

    }

    void AddNewAction()
    {
        this.Actions.Add(new BaseAction());
    }

    void OnDeleteAction(BaseAction action)
    {
        this.Actions.Remove(action);
    }

    void OnDuplicateAction(BaseAction action)
    {
        this.Actions.Add(action);
    }

    void AddNewDamageType()
    {
        this.DamageTypes.Add(new DamageType());
    }

    void AddNewStatusType()
    {
        this.StatusTypes.Add(new StatusType());
    }
}
