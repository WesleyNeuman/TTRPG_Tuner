@using BattleEntities

<div class="modal @ModalClass" tabindex="-1" role="dialog" style="display:@ModalDisplay">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Entity Design</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <p>Modal body text goes here.</p>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-primary" data-dismiss="modal" @onclick="@(() => entitySender.InvokeAsync(newEntity))">
                    Save Changes
                </button>
                <button type="button" class="btn btn-secondary" data-dismiss="modal" @onclick="() => Cancel()">Cancel</button>
            </div>
        </div>
    </div>
</div>

@code {
    // Prototype for this taken from https://stackoverflow.com/a/59257190
    [Parameter]
    public EventCallback<BaseEntity> entitySender { get; set; }
    public BaseEntity newEntity = new BaseEntity();
    public string ModalDisplay = "none";
    public string ModalClass = "";
    public bool ShowBackdrop = false;

    public void Open()
    {
        ModalDisplay = "block;";
        ModalClass = "Show";
        ShowBackdrop = true;
        StateHasChanged();
    }

    public void Cancel()
    {
        ModalDisplay = "none";
        ModalClass = "";
        ShowBackdrop = false;
        StateHasChanged();
    }
}